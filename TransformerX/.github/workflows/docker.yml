name: Docker Build

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
      - 'docker-compose.yml'
      - '.github/workflows/docker.yml'
      - 'server/**'
      - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
      - 'docker-compose.yml'
      - '.github/workflows/docker.yml'
      - 'server/**'
      - 'scripts/**'
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [production, development, jupyter]
        include:
          - image: production
            dockerfile: Dockerfile
            tag: latest
          - image: development
            dockerfile: Dockerfile.dev
            tag: dev
          - image: jupyter
            dockerfile: Dockerfile.jupyter
            tag: jupyter

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build ${{ matrix.image }} image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          tags: transformerx:${{ matrix.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate docker-compose.yml
        run: docker-compose config

      - name: Build with docker-compose
        run: docker-compose build

      - name: Test with docker-compose
        run: |
          docker-compose run --rm test python -c "print('Docker compose test successful!')"

  docker-security-scan:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build image for scanning
        run: docker build -t transformerx:scan .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'transformerx:scan'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' 